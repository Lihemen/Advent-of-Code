const input = [
	'BBFBBBBRRL',
	'FBFFFFBLRL',
	'FBFBBFFRLR',
	'FBFFFBFRLR',
	'FFBBFFFLRR',
	'FFBBBFFRRR',
	'BFBBFBFLRL',
	'BFFFBFFLRR',
	'FBBBFFBLLR',
	'BBFFBBFRRL',
	'BFBBBBBRLR',
	'FBBBBFFLLR',
	'FFBFFFBLLR',
	'FFBBFBFRRR',
	'BBFBFFFRRR',
	'FFBFFBBLLR',
	'FBBFFBBLRL',
	'FFBBBFBLLL',
	'FFBFFBBLRR',
	'FBFFBFBLLR',
	'FFFBBBFLLL',
	'BFBBFBFRLR',
	'BBFBBBFLLL',
	'FBBBFBBRLL',
	'FFBBBBFRRL',
	'BFBBBBFLRR',
	'BBFBBFBLRL',
	'FFBFFFBLRL',
	'BFBBBBBRRR',
	'FFFBFBFLLR',
	'BFBFBBBLLR',
	'FFBFBBBLRL',
	'FFFBFBBLRR',
	'BFFBFFFLLL',
	'BFFFBFBLRL',
	'BFBFFFBRLL',
	'BBFFFFBRLR',
	'FBBFFFBLRR',
	'BFFFFBFLLL',
	'BBBFFFFLLL',
	'BFBFFBBRLL',
	'BBFBFFFRRL',
	'BFBBFFFRLR',
	'BBFBFBFRRL',
	'FBBFFBFRRL',
	'BFBFBFFRRL',
	'FFBFFFFLLR',
	'FBBBFBBLLR',
	'BBFFBFBRLL',
	'BFFBFBBRLL',
	'FBBFFFFRRR',
	'BFFFBBBLRL',
	'FFBBFFBLLL',
	'FFFBBFFRRL',
	'FBFBBBBLRR',
	'FFBBBFFLLL',
	'FBFBFFBRRR',
	'FBBFFBBLLR',
	'FBFFBFFRLL',
	'BFBBBFFRLR',
	'FBFFBBBLRR',
	'FBFFFFBRLR',
	'BBFFBBFLRL',
	'FBFFBBFLRL',
	'FBFBBFFRRR',
	'BFBBBFBLRL',
	'FBFBFFFLLR',
	'FFFFBBBLLR',
	'BFBFFBBLLR',
	'BFFBBBFRLR',
	'BFBBBFFLRR',
	'BBFFFBBLLR',
	'BFFFBBFLRL',
	'FBFFBFBLRL',
	'FBBBFFFRRL',
	'FBFFFFBLLL',
	'BFBFFBBRLR',
	'BFBFBBBLRL',
	'BFFBFBBRLR',
	'FBBFBBBLLR',
	'FFBFBFFRLL',
	'FFFBBBBLRR',
	'BFBFFFFLLL',
	'BBFBFBBLLR',
	'BFFFBBBRLR',
	'FFBFFBFRLR',
	'FBBFBBBLRL',
	'BBFFFBBLLL',
	'FFBFFBBRRR',
	'FBBBBFBLLR',
	'BBFBBFFRLL',
	'BFBBBBFRLR',
	'BBFBFFBRLR',
	'FFBFFFFLLL',
	'BBFBFBFRLL',
	'FFBFFBBRLL',
	'FBBFFFFRLR',
	'FFBBBBBRRR',
	'BBFFBBBLRL',
	'BFFBBFBRLL',
	'BFFFBBFRLL',
	'BFFBFBFLRL',
	'FBFFFFFRRR',
	'BFFBFBBRRL',
	'FBFBBBFLLR',
	'FBFBFBBRLL',
	'BBBFFFFRRR',
	'BFBFBFFLRL',
	'FFFFBFBRLL',
	'FFBBFFBLRL',
	'BBFFBFBLLL',
	'BFFBBBBRLL',
	'BFFBBBBRRR',
	'BFBBBBFRRL',
	'BBBFFFBLRL',
	'FFBBFFFRRR',
	'BFFFFFBRLR',
	'FFFBBFBLLL',
	'BFBFBBFRLR',
	'FBBBFBFLRL',
	'BFBFBFFRLR',
	'BBFBBFFLRL',
	'BFFFBFBLLL',
	'BFFFFBBRLL',
	'FFBFFFFRRL',
	'BFFBFBBLLR',
	'FFFFBBBLLL',
	'FBBFFBBRRL',
	'BFBFFFFLLR',
	'FBFBFBFRLL',
	'FBBBBBBLRR',
	'BBFFFFBLRR',
	'FFFFBFBRRR',
	'FBBBBFBRLL',
	'BBFBFBBLRR',
	'FFBBFBFLLL',
	'BFBBFFBLRL',
	'FFFBBBBRRR',
	'BFBBFFFRLL',
	'BFBBBFBRRR',
	'FFFFBBFRLR',
	'FFBBFBFLRR',
	'FFFFFBBLLR',
	'BBFBBFBRLL',
	'FBFBBBBRLR',
	'BBFFFFBLRL',
	'FBBFFFBLLR',
	'FFBFFBBLLL',
	'FFFBBBFLLR',
	'FFFBBBFRRR',
	'FFBBBFBRRR',
	'FFFBBFFRRR',
	'FFBBFFBLLR',
	'BFBFFBFRRR',
	'FFBFBBFLLR',
	'BFFFFFFRRR',
	'FFBFFBFLRL',
	'BFFBFBBRRR',
	'FBFBFFFRLL',
	'BBBFFFBLLL',
	'BFBBFBFRRL',
	'BFFFFFBLRR',
	'FBBBBBFRRR',
	'FFBBBBFLRR',
	'BBFBBBBLRR',
	'BBFBFBFLLR',
	'FFFFBBFRRR',
	'FFBBBBBLLR',
	'BFFFBFBRLR',
	'FBBBFFBLLL',
	'FFFFFFFRRR',
	'FFFBFBFRRL',
	'BFBBFBBLRR',
	'FBBBBFBLRL',
	'FBBBBFBRRR',
	'BFFFFBFRRR',
	'BFFBBFFLLL',
	'FBBFBFBLRL',
	'BFBBFFFRRL',
	'FBFBFFBRLR',
	'FBFFBFFLRR',
	'BFFFBFBLLR',
	'BFBBFFBRRR',
	'BBFBBFBLLL',
	'BFFBFFFLRR',
	'FFFBBFFRLL',
	'BFBBFFFLLL',
	'BFFFBBBRLL',
	'FBFFBBFRRR',
	'FFBFBFBLLR',
	'FBFFFFBLRR',
	'FFBBFFFLLL',
	'FFFBBBBRRL',
	'BBFBFFFLLL',
	'BBFFBBFLLR',
	'BFBFBBBRRR',
	'FBBBBFBRRL',
	'FBFFFBFLLR',
	'FBFBBBFRRR',
	'BFFFBFBRRL',
	'FBFBBBFLRL',
	'BBFFBFFLRL',
	'BBFBBFFLLR',
	'FFFFBFFRLL',
	'FFFBBBBLRL',
	'FBBBFBFRLL',
	'BBFFFBBLRL',
	'FFFBFFBLRR',
	'BBFBFBBRRL',
	'FFFFBBBRRR',
	'FFBBBBBLRL',
	'FFFFFFBLLL',
	'FBFFFFFRRL',
	'FFFFFBBLRR',
	'BFFFBBBRRL',
	'FBBFFFFLRL',
	'FFFFFBBRLR',
	'FFBFFBFRLL',
	'FFFBBBFRRL',
	'BFBBBFFLRL',
	'FFFFFBFLRR',
	'BFBFBBBRLR',
	'FBFBBBFLLL',
	'BFBFFBFLRL',
	'FFBFBFFRRR',
	'FFBBFFFRLL',
	'BFBFBFFLLL',
	'FBFBFBBRLR',
	'BFFBBBFRRL',
	'FBFFBBBRRR',
	'FBFBFBBLRR',
	'BFBBBBFLLR',
	'FFFBFFFRLR',
	'BFBBFFBRRL',
	'BFFFBFFLRL',
	'BFBFBBFRRR',
	'FBBFFBFLLL',
	'FFFFFFBLRR',
	'FBFFBFBLRR',
	'FFBBBFFLRR',
	'FBBBFFBRLL',
	'BFFFBBBRRR',
	'FFBFFFFRLL',
	'BBFFFBFRRR',
	'BFFBFBBLLL',
	'BFBBFFBRLR',
	'FFBFBBBLRR',
	'FFFBFBBLLL',
	'FFFBBFFLLL',
	'FBBBBBBLRL',
	'BFBFBBBLLL',
	'BFBFFFFRRL',
	'FFBFBBFRRR',
	'FFBFBFBRRL',
	'FFFBBBBRLL',
	'BFFBFFBRLL',
	'BBFFFFBRRL',
	'FFBFBFBLLL',
	'FFBFBFBRLL',
	'FBFBBBFRRL',
	'FBFFBBFRLR',
	'BBBFFFFLRL',
	'FBFBFFFRRL',
	'FFFBFBFRLR',
	'FBFBFBBRRL',
	'BFBBFBBLLL',
	'FFBBBBBRLL',
	'BBFFBFBRRL',
	'FFFBFFFRRR',
	'FBBFBFBLLL',
	'BFFFBFFRLR',
	'FBFBFFBRLL',
	'BBFBBFFLLL',
	'FBBBBFFLRR',
	'FFBBBFFLRL',
	'FBBBFFBRRR',
	'FFBBFBBRLR',
	'FBFBBFFLLR',
	'BFBBBFFLLR',
	'FFFBBFFLRR',
	'FBFFBFFLRL',
	'BFBFBFFLRR',
	'BBFBFFFLLR',
	'FFFBBBBLLR',
	'FFBBFFBRLL',
	'BBBFFFBRLL',
	'FBFFBFBRRL',
	'BFBFFFFRLL',
	'FBFBFBFRLR',
	'BBFFFFFLLL',
	'FFBFBBBLLR',
	'FFBFBFFLRR',
	'FBBBBFBRLR',
	'FFBFBBBRLR',
	'BFFBBBBLRL',
	'FFBBBBBRLR',
	'BFBBBFFRRR',
	'FBFBBFBRLL',
	'FFBFFFBRRL',
	'BBFBFBFLLL',
	'BFBBBFBRLR',
	'BFBBFBFLLR',
	'FBBFBFFRLL',
	'FFBFBBFLRR',
	'BFFBFBFRLL',
	'FFBBFBBLRL',
	'FBFBFBBLRL',
	'BBFFFBFLLR',
	'BFBFBBBLRR',
	'BBFFBBBLLR',
	'BBFFFFBRRR',
	'BFFFFFBLRL',
	'FBBBFBBRRR',
	'BFBFFFBLLL',
	'FFFBBFFLLR',
	'BFFBBFFLLR',
	'BBFBBBBLRL',
	'FBBFBFFLRR',
	'FBFBFFBLLR',
	'BFFFFFFLLL',
	'BFFBBFFRLL',
	'BBFFFFFLLR',
	'FBFFBBFRRL',
	'FBBFFFFLLR',
	'BFBFFBBRRL',
	'FFBFFFBLLL',
	'BFFFFFBLLR',
	'FFBBBFBRRL',
	'FFBBBBFLLR',
	'BFBFFFBLLR',
	'FFFFBFFRLR',
	'BFBBFFBRLL',
	'FFBBBBBLLL',
	'FBBFBFFRRR',
	'BFFFFFFLLR',
	'FFBBBBBLRR',
	'FFFFFBFRRR',
	'BFFFBBBLLL',
	'BFFFBFFRRR',
	'FFBBBFBRLR',
	'BFFBBBBLRR',
	'BFBBBFFRRL',
	'BFBFBFFRRR',
	'BFBBFBBRLR',
	'BFBBBBFRLL',
	'FFBBBBFLLL',
	'FFFBBFBLRR',
	'FBBFBBFRLR',
	'BBFBBFFLRR',
	'FBBFBBBRRL',
	'BFFBFFFRRL',
	'BFFFFBFLRR',
	'FFBFBBFLLL',
	'FFBFBBBLLL',
	'FBFFBFBRRR',
	'FFFBFFBRLL',
	'BFFFFBFLRL',
	'FFFFBFFLLR',
	'BBFBBBBRLL',
	'FBFBBFBRRR',
	'BFFFBBBLRR',
	'FBFFFBFRLL',
	'FFBBBFBLRL',
	'FBFFFBBLRR',
	'FFBBFBFRLR',
	'FBBBBBFLRL',
	'FFFFBFBLRR',
	'BFBFBFBLRR',
	'FFBBFFFLRL',
	'BFFBBBFLLR',
	'FFFFFFBRLR',
	'FFBBBFBLRR',
	'FBFBBFFRLL',
	'BBFBFBFRLR',
	'FBBFFFFLLL',
	'BFBBFBFRRR',
	'BFFBBBFRRR',
	'FBFFFBFLRR',
	'FBBFFBFLRL',
	'BFBBFFFLRR',
	'FFBFFFFLRL',
	'BFFBFFBLLL',
	'FFFBFBBRRR',
	'BBFFBFFLRR',
	'BBBFFFFRRL',
	'FBBBFFBLRL',
	'FBBFFBBLRR',
	'FFBFBFFLLR',
	'FFFBBFFRLR',
	'FBBBFBBRLR',
	'FFFFBBBLRR',
	'BBFFBFBRRR',
	'FBFBBFFLRL',
	'FBBBBFFLLL',
	'FFBFFBBRLR',
	'BBFFFFFLRR',
	'FFBFBFBRLR',
	'FFBFBFBLRL',
	'FBBBFBBLRL',
	'FFFBFBBLRL',
	'FBFBFFFRRR',
	'BFFBFFFRLR',
	'BFBBFFBLLR',
	'BFBFFBFRLL',
	'FBFBFBFRRR',
	'FBFFFFBRLL',
	'FFFFFBBRRR',
	'FBBBFFFLRL',
	'FFFBFFBRLR',
	'BFBFFBFLRR',
	'FBBFBBFRRL',
	'BFBBBBFRRR',
	'BFFFFBBLRR',
	'FBFFFFFLLL',
	'BFBFFFBRRL',
	'FFFBFFBLRL',
	'FFBFFFBLRR',
	'FBBFFBFRLL',
	'BBFBFFBLLL',
	'BBFFBBFLLL',
	'FFBBBFFRLL',
	'BFBBFFFLRL',
	'FBBFBFFLLR',
	'FBFBFFBLLL',
	'FFBBBFFLLR',
	'FBBFFBFLRR',
	'FBBFBBFRRR',
	'BFFFFBBLLL',
	'FFFBFFBLLR',
	'FBFBFFFRLR',
	'FBFBFBBRRR',
	'FBFBBFBRRL',
	'BBFBBFBRRR',
	'FFFFBBBRLL',
	'FBFFBBBLRL',
	'BBBFFFFRLL',
	'FBFFFBFLRL',
	'BFFFFBFLLR',
	'FBFBBFFRRL',
	'BFFBFBBLRR',
	'FBFBBBBRRL',
	'FBFBFBBLLR',
	'FBFFBBFLRR',
	'FFFFBFFLLL',
	'BFBFFFFRRR',
	'BBFFBBBLRR',
	'FBFFFFFLLR',
	'BFFFFBBRLR',
	'BBFBFFFRLR',
	'FBBBFBBLRR',
	'FBFFFFFLRL',
	'BFFBFBBLRL',
	'BFFBBFBLLL',
	'FFBFFBFRRR',
	'BFFBBBFRLL',
	'BBFBBFBLLR',
	'BFBFBFBRLL',
	'FBFFFBBRLR',
	'FBFBBFBLRL',
	'BBFFFBFRLR',
	'BBFBFFBRLL',
	'BBFBBBBLLL',
	'FBBFFFBLLL',
	'FBBBBBFRLL',
	'BFFFFFFLRR',
	'BFFFFFFLRL',
	'BFFFBFBRRR',
	'FBFFBBBRLR',
	'FBBBBFBLRR',
	'FFBBFBBRRL',
	'FFBBFBFRRL',
	'FFBBBBFLRL',
	'FFFBFBFRRR',
	'FBFBBBBRLL',
	'BFBBFFFRRR',
	'FFBFFFFRRR',
	'FBFFBBFRLL',
	'FBFBBFBLLR',
	'BFFFFBBLLR',
	'FBBFBBBRLR',
	'BBFFBBBRRR',
	'BFFBBFBLRL',
	'BFBFBFFRLL',
	'FFBBBFBRLL',
	'BFFBFFFRRR',
	'FBBBBFFRRR',
	'FBFFBFFRRL',
	'BBFFFBBRLL',
	'FFFBBBFRLL',
	'FFBBFFFRRL',
	'BBFFFBBRLR',
	'BBFBFFBRRR',
	'BBFFBFBLRR',
	'BFFBBFFLRL',
	'BFBBBBBLRR',
	'FFFFBFBRRL',
	'BBFFFFBLLL',
	'FBBBFFFLRR',
	'FBBFFBBRRR',
	'FBBBFBBLLL',
	'FBBFBBFLRR',
	'FFFFFBBLLL',
	'FFFFBBFLRL',
	'BFBFFFFLRR',
	'BFBBBBBLLR',
	'BBFFBBBRLL',
	'FBFFFFBLLR',
	'FFBBFBFLLR',
	'FBFFBFFRRR',
	'FBBBBBBRLL',
	'BBFBBBFLRR',
	'FFFFFBFRLR',
	'FFFFFFBLLR',
	'BBFFBFFRRR',
	'FBFFBFBRLL',
	'FFBBFBBLRR',
	'BFFBFFFLLR',
	'FFBBFFBRRL',
	'BBFFBBBRLR',
	'BFBFFFFRLR',
	'FBBBBFFRRL',
	'BFBFFFBRRR',
	'BFBBBFBLLL',
	'BFBBFFBLRR',
	'FBBBFFFRLR',
	'BBFFFBBRRR',
	'BBFBBFFRLR',
	'FFBFBBFRLL',
	'FFFFBBBRRL',
	'FBBBFFBRLR',
	'FBFFFFBRRL',
	'FBBBBBBLLL',
	'FFBFFFBRRR',
	'FBFFBBBRLL',
	'BFFBFFBLRL',
	'BFBFBFBRLR',
	'BBFBBBFRLR',
	'FFBBFBBLLR',
	'BBFFFFBRLL',
	'BBFBBBBRLR',
	'FFBBFFBRLR',
	'FFFFBFFRRR',
	'BFBBBFBLLR',
	'FBBFBBBLLL',
	'BBFFFBFRRL',
	'BFFFFBBRRR',
	'FFFBFFFLRL',
	'BBFFBBFRRR',
	'FFFBFBFLRL',
	'FFFBBBFLRL',
	'FBBFFFFLRR',
	'BFBBFFBLLL',
	'BFFBBBFLLL',
	'FBFFBFFLLL',
	'FFFFFFBLRL',
	'FBBFFBBRLR',
	'FBBBBBBRRR',
	'BBFBBBBRRR',
	'BFFFBBBLLR',
	'BFBFFBFRLR',
	'BFBFBFFLLR',
	'FFBFBBFRLR',
	'FBBBFFFRRR',
	'FFBFBBBRRR',
	'FFFFFBFRLL',
	'FBBBBBFRLR',
	'BFBFFBBLLL',
	'BFBFFBBLRL',
	'FFBBFBBLLL',
	'BFFBBBBRRL',
	'FBBFBFBRRL',
	'FBBFBFBLLR',
	'FBBFFFBLRL',
	'BFBBBFBRRL',
	'FBBFBBBLRR',
	'BFFFBFFLLR',
	'FBBBFBFLLL',
	'FFBFFBBLRL',
	'FBBBFBFLRR',
	'BFFFBFFLLL',
	'BBFBBBBLLR',
	'BBFBFBBLRL',
	'FBFFFFFLRR',
	'FBFBFFBLRR',
	'BFBFBBFRRL',
	'BFFFFBFRLR',
	'BFFFFFFRRL',
	'BBFFFFFRLL',
	'BFBBFBBRLL',
	'FFFBFFFLRR',
	'FFBBFFFLLR',
	'BBFBFFBLLR',
	'FFFBFFBRRR',
	'FBFBFFBRRL',
	'BFFBFFFRLL',
	'BBFFBFBLRL',
	'BFBBBFFLLL',
	'FBBFBBBRRR',
	'FBFBBFFLRR',
	'FBBFBFBRRR',
	'FFFBBFBRLL',
	'FBBBFFBLRR',
	'BFFFBBFLLL',
	'FFFFFFBRLL',
	'BFBFFBBRRR',
	'BFBFBFBRRR',
	'BBFFFBFLRL',
	'BFBFFFBLRR',
	'BFFFBBFRLR',
	'BBFFFBBRRL',
	'FFFBFFBRRL',
	'BFBFFFBLRL',
	'BFBBBFBRLL',
	'BFFBFFFLRL',
	'FFFBFFFLLR',
	'FBBBFBBRRL',
	'BBFBBFBLRR',
	'FBFFFFFRLR',
	'FBBFBFFRLR',
	'BFBFBBFRLL',
	'FBBBBFFRLR',
	'BFBFBFBRRL',
	'BBFBFBFRRR',
	'BFBFBBFLLR',
	'FBBBBBBRLR',
	'BBBFFFFRLR',
	'BFFFBBFRRL',
	'FBFBBBFLRR',
	'BBBFFFBLLR',
	'FBFFBBBLLR',
	'FBFFFBBLRL',
	'BFBBFBBLRL',
	'BFBFBBFLRR',
	'FFBBFFFRLR',
	'BFFFFFBRRL',
	'BFBFBFBLRL',
	'BFFBBFFRLR',
	'FFBBFFBRRR',
	'BFFBFBFRLR',
	'BBFFFFFRRL',
	'BFBBBBBLLL',
	'FFFBBFFLRL',
	'BBFFFFFLRL',
	'FFFBBBBLLL',
	'BFBBFBFRLL',
	'FFFFBBFLRR',
	'FFFFFBFLRL',
	'BFFBBBBLLL',
	'FBFFFBFRRR',
	'BFFFBBFLLR',
	'BBFBBFFRRL',
	'FFBFFBBRRL',
	'FBBBFFFLLL',
	'BFFBBBFLRL',
	'BFBBBFBLRR',
	'FFFBBBFRLR',
	'BFBBBBBRLL',
	'FFBFBFFLLL',
	'FFFFBFFRRL',
	'BFFFBBFLRR',
	'BBFBFFFLRL',
	'BFBFFBBLRR',
	'FFFBFBFRLL',
	'BBFFFFFRLR',
	'FFFBFBBLLR',
	'FFFFFBBLRL',
	'FFBFBFFRRL',
	'FBBBBFBLLL',
	'FBBBFBFRRL',
	'FBBBBFFLRL',
	'FFFFBBBRLR',
	'BBFFBFBLLR',
	'BFBBBBBRRL',
	'FBFFFBFRRL',
	'FBFBFFFLRL',
	'BFFFFFBLLL',
	'FFFBBFBLRL',
	'FFFFBBFRRL',
	'BFFBFBFLLL',
	'FBFBBBBRRR',
	'FFFBFBBRLR',
	'FFBBBBFRRR',
	'FBFFBBBLLL',
	'BBFBFBBRLR',
	'BFFFFBFRLL',
	'FBBFBFFRRL',
	'BFFBBBFLRR',
	'BBFBFBFLRR',
	'FFFFFBFLLL',
	'BFFBBFBRLR',
	'FFBFBBFLRL',
	'FFFBBFBRLR',
	'FFBBBFFRLR',
	'BFFBBBBLLR',
	'FBFBBBBLLR',
	'BBFFFFFRRR',
	'BBFBFBFLRL',
	'FBBFFBFRRR',
	'FFFBFFFRRL',
	'FFBBFBFRLL',
	'BBFFBFFRLL',
	'BBFFBBFRLL',
	'FFFFBFBLLR',
	'FBFFBFFRLR',
	'BFBBBBFLRL',
	'FFFFBBFLLL',
	'BFBFBBFLLL',
	'FFBFBFBLRR',
	'BFBBBBBLRL',
	'FBFBBBBLRL',
	'BFFFFFBRRR',
	'FBBFFFFRRL',
	'FBBFBBFLLR',
	'FBFFBBBRRL',
	'FBFFFBFLLL',
	'FBBFBBBRLL',
	'FFBFFFFRLR',
	'FFBFBBBRRL',
	'FFFFBFBRLR',
	'FFBFFBFLLL',
	'BFFBFBFRRL',
	'BBFBFFBLRL',
	'BFFBFBFLRR',
	'BFBBBBFLLL',
	'BBFFBFFLLR',
	'BBFFFBBLRR',
	'BBFBBFFRRR',
	'FBBFBFBLRR',
	'BFBFFBFRRL',
	'FFFBBFBLLR',
	'BBFBBBFRRR',
	'FBBBFBFLLR',
	'FFFBFFFLLL',
	'BFBFBFBLLL',
	'BFBBFBFLLL',
	'FFFBFBFLRR',
	'BBFFBBFLRR',
	'BBFBFBBRRR',
	'BFFFFFFRLR',
	'FFFFBBFRLL',
	'BBFFFBFRLL',
	'FBFFFFBRRR',
	'FBBFBBFRLL',
	'BFFBFFBLLR',
	'FBFFBBFLLR',
	'FBFFBFBRLR',
	'FFBFFBFLRR',
	'FBBFFFBRRL',
	'FBFBBFFLLL',
	'FFBFBFBRRR',
	'FBFBFBFRRL',
	'FFFBFBBRLL',
	'FBFBFBFLRL',
	'FFBBBBFRLL',
	'FBBBFFFLLR',
	'BFFBFFBLRR',
	'FBFFFBBRLL',
	'FBFFFBBRRR',
	'FBBFBBFLRL',
	'BFFBFFBRRR',
	'FBFFFBBLLR',
	'FBFFFFFRLL',
	'FBBBFBFRRR',
	'FFFBFFBLLL',
	'BBFBBBFRLL',
	'FBFFFBBRRL',
	'FFBFFFFLRR',
	'FBFBFBBLLL',
	'BBFFBFFRLR',
	'FBFBBFBLLL',
	'FBBBBBBLLR',
	'BFFFFBBRRL',
	'BBFBFFFLRR',
	'FFBFFFBRLL',
	'BBFFFBFLRR',
	'BFBBBFFRLL',
	'FFFFBBBLRL',
	'FBFBBBBLLL',
	'BBFBFFFRLL',
	'BBFFBFBRLR',
	'BBFBBFBRLR',
	'FBBBFBFRLR',
	'BFBFFFFLRL',
	'FBBBBBFLLR',
	'FFBFFFBRLR',
	'BFFBBFBRRL',
	'FFBBBFBLLR',
	'FFFFFFBRRR',
	'BBFFBFFRRL',
	'FBBBBBBRRL',
	'FFBBFBBRRR',
	'FBBFBFBRLR',
	'BFFBBFFRRL',
	'FBBBBBFLLL',
	'FBBFFFFRLL',
	'BFFFFBBLRL',
	'FBBFFFBRRR',
	'FBFBFFFLLL',
	'FFFFBFBLLL',
	'FFFFBFFLRR',
	'FBFBBFBLRR',
	'FBFFBFFLLR',
	'FFFBBBFLRR',
	'FFBFFBFRRL',
	'BBFFBFFLLL',
	'BBFFFBFLLL',
	'BFBBFBBRRR',
	'BFFBFFBRRL',
	'FBFFBFBLLL',
	'FBFBFFFLRR',
	'BBFBFFBLRR',
	'BFFBBFFRRR',
	'BFBBFBBLLR',
	'BBBFFFFLLR',
	'FFFFFFBRRL',
	'FBBBBBFRRL',
	'BFBFFBFLLL',
	'FFBBFBFLRL',
	'BFFBBBBRLR',
	'FFBBBBFRLR',
	'FBFBFFBLRL',
	'FFFFFBFLLR',
	'BBFBBFBRRL',
	'BFBFBFBLLR',
	'FBFBFBFLLL',
	'BFFBBFBLLR',
	'FFFBFFFRLL',
	'FFFBBFBRRL',
	'FFBBFBBRLL',
	'FFFBBBBRLR',
	'FBBFFBBLLL',
	'BBFFBBBRRL',
	'FFFBBFBRRR',
	'FBBBBBFLRR',
	'FBBFBFFLRL',
	'FFFBFBFLLL',
	'BBFBFFBRRL',
	'BFFBFBFLLR',
	'FBBBFFFRLL',
	'BFFBBFFLRR',
	'FFBBBBBRRL',
	'BFFFBFFRRL',
	'FBBFBFBRLL',
	'BBFFBBFRLR',
	'BBFFFFBLLR',
	'FBFBBFBRLR',
	'BFFFBBFRRR',
	'FBBFFFBRLL',
	'FFFFFBBRLL',
	'BFFFBFBLRR',
	'BFFFFFBRLL',
	'FFFFBFBLRL',
	'BFFBFFBRLR',
	'FBBFBFFLLL',
	'FFBFFBFLLR',
	'BBFBBBFLRL',
	'BFFBFBFRRR',
	'BFBBFFFLLR',
	'BBBFFFFLRR',
	'FFFFFBFRRL',
	'FBBFFFBRLR',
	'BBBFFFBLRR',
	'FFFBFBBRRL',
	'FFBBFFBLRR',
	'FFBFBBFRRL',
	'BFBFBBBRRL',
	'BBFFBBBLLL',
	'FFBFBBBRLL',
	'BFFFBFBRLL',
	'FBFFFBBLLL',
	'FBFBFBFLRR',
	'BFFFFBFRRL',
	'FBBFFBFLLR',
	'FFBFBFFLRL',
	'FFBBBFFRRL',
	'FBBFFBFRLR',
	'BBFBBBFLLR',
	'BFBFFFBRLR',
	'FBBFFBBRLL',
	'BBFBFBBRLL',
	'BFFFBFFRLL',
	'FBFBBBFRLL',
	'BFFFFFFRLL',
	'BFBFBBBRLL',
	'BFBBFBFLRR',
	'BFFBBFBRRR',
	'BBFBBBFRRL',
	'FBFBFBFLLR',
	'BFBFFBFLLR',
	'FBFBBBFRLR',
	'FFFFFBBRRL',
	'FFBFBFFRLR',
	'FBFFBBFLLL',
	'FFFFBFFLRL',
	'BBFBFBBLLL',
	'BFBFBBFLRL',
	'FBBFBBFLLL',
	'BFBBFBBRRL',
	'FFFFBBFLLR',
	'FBBBBFFRLL',
	'FBBBFFBRRL',
];
// Helper function: Creates An Array from a specified start to a specified End
function range(start = 0, end, step = 1) {
	let arr = [];
	for (let i = start; i <= end; i += step) {
		arr.push(i);
	}
	return arr;
}

// Helper Function: Reducers the String to a single digit (For Rows)
function rowReducer(row) {
	let band = range(0, 127);
	let stringArr = row.split('');
	stringArr.forEach((el) => {
		if (el === 'B') {
			band = band.slice(band.length / 2);
		} else if (el === 'F') {
			band = band.slice(0, band.length / 2);
		}
	});
	return band;
}
// Helper Function: Reduces the string to a single digit (For columns);
function columnReducer(column) {
	let band = range(0, 7);
	let stringArr = column.split('');
	stringArr.forEach((el) => {
		if (el === 'R') {
			band = band.slice(band.length / 2);
		} else if (el === 'L') {
			band = band.slice(0, band.length / 2);
		}
	});
	return band;
}
// Helper function: This function really just formats the output of the reducers to an array pair
function mapToNumber(row, column) {
	const rowNo = rowReducer(row);
	const colNo = columnReducer(column);
	return [rowNo, colNo];
}
// Helper Function: Computes the Seat ID from a pair of column and row numbers;
function GetSeatId(row, column) {
	return parseInt(row * 8 + parseInt(column));
}
// Main Function
function PassportParity(array) {
	const arr = [...array];
	const newArr = arr
		.map((el) => [el.slice(0, 7), el.slice(7)])
		.map((el) => mapToNumber(el[0], el[1]))
		.map((el) => GetSeatId(el[0], el[1]))
		.sort((a, b) => b - a);
	console.log(newArr);
	// Therefore the highest ID will be the first ID;
	console.log(newArr[0]);
	return newArr;
}

PassportParity(input);
